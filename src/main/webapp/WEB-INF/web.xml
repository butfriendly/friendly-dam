<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:/spring/app-config.xml
            classpath:/spring/ektorp-config.xml
            classpath:/spring/jcouchdb-config.xml
            classpath:/spring/jms-config.xml
        </param-value>
    </context-param>

    <!--
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:app-config.xml</param-value>
    </context-param>
    -->

    <!-- Tell log4j where to find it's config -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:/log4j.xml</param-value>
    </context-param>
    <!--
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>1000</param-value>
    </context-param>
    -->
    
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!-- Listener for custom log4j initialization in a web environment -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Servlet-listener that exposes the request to the current thread -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>Jersey Spring Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <!--
        <init-param>
            <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
            <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
        </init-param>
        -->

        <!-- Log all requests -->
        <!--
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value>
        </init-param>
        -->

        <!-- Log all responses -->
        <!--
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value>
        </init-param>
        -->

        <!-- Core of our jersey-app -->
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>de.soulworks.dam.webservice.Application</param-value>
        </init-param>

        <!-- Look at the package stated below for any resources -->
        <!--
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>de.soulworks.dam.webservice</param-value>
        </init-param>
        -->
    </servlet>

    <servlet-mapping>
        <servlet-name>Jersey Spring Web Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <!-- We make use of a servlet-filter for controlling quotas -->
    <!--
    <filter>
        <filter-name>quotaFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>quotaFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->
</web-app>